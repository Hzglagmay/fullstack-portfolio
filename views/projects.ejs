<%- include('partials/head', { site: (typeof site !== 'undefined' ? site : {}), nav: (typeof nav !== 'undefined' ? nav : []) }) %>
<main class="page projects-page">
  <div class="container">
    <section class="page-header">
      <h1>My Projects</h1>
      <p>A few school builds and experiments. More to come.</p>
    </section>

    <style>
      /* ------- Scoped projects layout fixes ------- */
      .projects-grid {
        display: grid;
        grid-template-columns: repeat(3, minmax(0, 1fr));
        gap: 1.25rem;
      }
      @media (max-width: 1024px) { .projects-grid { grid-template-columns: repeat(2, minmax(0, 1fr)); } }
      @media (max-width: 640px)  { .projects-grid { grid-template-columns: 1fr; } }

      .project-card {
        background: rgba(17, 34, 48, 0.8);
        border-radius: 1rem;
        padding: 1.25rem;
        box-shadow: 0 10px 25px rgba(0,0,0,.25);
        min-height: 210px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }
      .project-card .icon {
        width: 48px; height: 48px;
        display: grid; place-items: center;
        border-radius: 12px;
        background: rgba(255,255,255,.05);
        margin-bottom: .75rem;
        font-size: 28px;
      }
      .project-card h3 { margin: 0 0 .35rem 0; font-size: 1.25rem; }
      .project-card .year { opacity: .7; margin-bottom: .75rem; }
      .project-card .actions { margin-top: .5rem; }
      .btn {
        display: inline-block; padding: .6rem 1rem; border-radius: .7rem;
        background: #0d3850; color: #e8f1f7; text-decoration: none; font-weight: 600;
      }
      .btn.primary { background: #ffd24a; color: #2a2a2a; }
      .coming {
        display:flex; align-items:center; gap:.75rem; color:#bcd1db; font-weight:600;
      }
    </style>

    <% 
      // Robustly pull projects array from locals
      const items = (typeof projects !== 'undefined' && projects)
                 || (typeof site !== 'undefined' && site.projects)
                 || [];
      const isComing = p => ((p && p.title && p.title.toLowerCase().includes('coming soon')) || p.placeholder === true);
      const real = items.filter(p => !isComing(p));
      let placeholders = items.filter(p => isComing(p)).slice(0, 3); // show max 3
      // If there are fewer than 3 placeholders, synthesize until we reach exactly 3
      const need = Math.max(0, 3 - placeholders.length);
      for (let i=0;i<need;i++) placeholders.push({ title: 'Coming Soon', year: '', placeholder:true });

      const all = [...real, ...placeholders];
      const pickIcon = (p) => {
        const t = ((p && (p.icon || p.type)) || '').toLowerCase();
        if (p && p.placeholder) return '➕';
        if (t.includes('github')) return '';  // fallback glyph
        if (t.includes('doc')) return '📄';
        if (t.includes('computer') || t.includes('web') || t.includes('monitor')) return '🖥️';
        return '🗂️';
      };
    %>

    <section class="projects-grid">
      <% all.forEach(p => { %>
        <article class="project-card">
          <div>
            <div class="icon"><%= pickIcon(p) %></div>
            <h3><%= p.title || 'Untitled' %></h3>
            <% if (p.year) { %><div class="year"><%= p.year %></div><% } %>
            <% if (p.placeholder) { %>
              <div class="coming">Coming Soon</div>
            <% } %>
          </div>
          <div class="actions">
            <% if (!p.placeholder) { %>
              <% if (p.href) { %>
                <a class="btn" href="<%= p.href %>"><%= p.cta || 'View Project' %></a>
              <% } else { %>
                <span class="btn" style="opacity:.7;pointer-events:none">Unavailable</span>
              <% } %>
            <% } else { %>
              <span class="btn" style="opacity:.5;pointer-events:none">Coming Soon</span>
            <% } %>
          </div>
        </article>
      <% }) %>
    </section>
  </div>
</main>
<%- include('partials/footer', { site: (typeof site !== 'undefined' ? site : {}) }) %>
